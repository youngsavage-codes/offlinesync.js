{"code":"import { __assign } from \"tslib\";\nvar LatestActionStrategy = /** @class */ (function () {\n    function LatestActionStrategy() {\n    }\n    LatestActionStrategy.prototype.resolve = function (localAction, remoteAction) {\n        return localAction.timestamp > remoteAction.timestamp ? localAction : remoteAction;\n    };\n    return LatestActionStrategy;\n}());\nvar MergeChangesStrategy = /** @class */ (function () {\n    function MergeChangesStrategy() {\n    }\n    MergeChangesStrategy.prototype.resolve = function (localAction, remoteAction) {\n        if (localAction.type === 'update' && remoteAction.type === 'update') {\n            return __assign(__assign({}, remoteAction), localAction);\n        }\n        return localAction.timestamp > remoteAction.timestamp ? localAction : remoteAction;\n    };\n    return MergeChangesStrategy;\n}());\nexport { LatestActionStrategy, MergeChangesStrategy };\n//# sourceMappingURL=conflict.js.map","references":[],"map":"{\"version\":3,\"file\":\"conflict.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/conflict.ts\"],\"names\":[],\"mappings\":\";AAIA;IAAA;IAIA,CAAC;IAHC,sCAAO,GAAP,UAAQ,WAAgB,EAAE,YAAiB;QACzC,OAAO,WAAW,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC;IACrF,CAAC;IACH,2BAAC;AAAD,CAAC,AAJD,IAIC;AAED;IAAA;IAOA,CAAC;IANC,sCAAO,GAAP,UAAQ,WAAgB,EAAE,YAAiB;QACzC,IAAI,WAAW,CAAC,IAAI,KAAK,QAAQ,IAAI,YAAY,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YACpE,6BAAY,YAAY,GAAK,WAAW,EAAG;QAC7C,CAAC;QACD,OAAO,WAAW,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC;IACrF,CAAC;IACH,2BAAC;AAAD,CAAC,AAPD,IAOC;AAED,OAAO,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,CAAC\"}","dts":{"name":"C:/Users/User/Documents/GitHub/offlinesync.js/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/conflict.d.ts","writeByteOrderMark":false,"text":"interface ConflictResolutionStrategy {\n    resolve(localAction: any, remoteAction: any): any;\n}\ndeclare class LatestActionStrategy implements ConflictResolutionStrategy {\n    resolve(localAction: any, remoteAction: any): any;\n}\ndeclare class MergeChangesStrategy implements ConflictResolutionStrategy {\n    resolve(localAction: any, remoteAction: any): any;\n}\nexport { LatestActionStrategy, MergeChangesStrategy };\n"}}
