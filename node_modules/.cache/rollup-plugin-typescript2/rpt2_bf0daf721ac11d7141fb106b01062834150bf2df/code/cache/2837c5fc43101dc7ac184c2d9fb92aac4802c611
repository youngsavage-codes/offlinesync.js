{"code":"import { __awaiter, __generator } from \"tslib\";\nvar Sync = /** @class */ (function () {\n    function Sync(queue) {\n        this.queue = queue;\n        this.onSyncSuccess = null;\n        this.onSyncError = null;\n    }\n    // Set success callback\n    Sync.prototype.setSyncSuccessCallback = function (callback) {\n        this.onSyncSuccess = callback;\n    };\n    // Set error callback\n    Sync.prototype.setSyncErrorCallback = function (callback) {\n        this.onSyncError = callback;\n    };\n    // Start syncing the actions\n    Sync.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var actions, syncedActions, failedActions, _i, actions_1, action, error_1, error, error_2;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        actions = this.queue.get();\n                        if (actions.length === 0) {\n                            console.log('No actions to sync.');\n                            return [2 /*return*/];\n                        }\n                        syncedActions = [];\n                        failedActions = [];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 9, , 10]);\n                        _i = 0, actions_1 = actions;\n                        _b.label = 2;\n                    case 2:\n                        if (!(_i < actions_1.length)) return [3 /*break*/, 8];\n                        action = actions_1[_i];\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 6, , 7]);\n                        // Simulate API call for syncing\n                        return [4 /*yield*/, this.syncAction(action)];\n                    case 4:\n                        // Simulate API call for syncing\n                        _b.sent();\n                        console.log(\"Action synced: \".concat(action.type));\n                        return [4 /*yield*/, syncedActions.push(action)];\n                    case 5:\n                        _b.sent();\n                        (_a = this.queue) === null || _a === void 0 ? void 0 : _a.remove(action.id);\n                        return [3 /*break*/, 7];\n                    case 6:\n                        error_1 = _b.sent();\n                        console.error(\"Failed to sync action: \".concat(action.type, \". Error: \").concat(error_1.message));\n                        failedActions.push(action);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        _i++;\n                        return [3 /*break*/, 2];\n                    case 8:\n                        // Update the queue with failed actions\n                        this.queue.set(failedActions);\n                        if (failedActions.length > 0 && this.onSyncError) {\n                            error = new Error('Some actions failed to sync');\n                            this.onSyncError(error, failedActions);\n                        }\n                        if (syncedActions.length > 0 && this.onSyncSuccess) {\n                            this.onSyncSuccess(syncedActions);\n                        }\n                        return [3 /*break*/, 10];\n                    case 9:\n                        error_2 = _b.sent();\n                        console.error('Unexpected error during sync:', error_2);\n                        if (this.onSyncError) {\n                            this.onSyncError(error_2, actions);\n                        }\n                        return [3 /*break*/, 10];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Simulate syncing an action\n    Sync.prototype.syncAction = function (action) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        setTimeout(function () {\n                            if (Math.random() > 0.8) {\n                                reject(new Error('Simulated network or server issue'));\n                            }\n                            else {\n                                resolve();\n                            }\n                        }, 1000);\n                    })];\n            });\n        });\n    };\n    return Sync;\n}());\nexport default Sync;\n//# sourceMappingURL=sync.js.map","references":["C:/Users/User/Documents/GitHub/offlinesync.js/src/components/queue.ts"],"map":"{\"version\":3,\"file\":\"sync.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/sync.ts\"],\"names\":[],\"mappings\":\";AAEA;IAKE,cAAY,KAAY;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,uBAAuB;IACvB,qCAAsB,GAAtB,UAAuB,QAAwC;QAC7D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED,qBAAqB;IACrB,mCAAoB,GAApB,UAAqB,QAAsD;QACzE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,4BAA4B;IACtB,oBAAK,GAAX;;;;;;;wBACQ,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;wBACjC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;4BACnC,sBAAO;wBACT,CAAC;wBAEK,aAAa,GAAU,EAAE,CAAC;wBAC1B,aAAa,GAAU,EAAE,CAAC;;;;8BAGF,EAAP,mBAAO;;;6BAAP,CAAA,qBAAO,CAAA;wBAAjB,MAAM;;;;wBAEb,gCAAgC;wBAChC,qBAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAA;;wBAD7B,gCAAgC;wBAChC,SAA6B,CAAC;wBAC9B,OAAO,CAAC,GAAG,CAAC,yBAAkB,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC;wBAC7C,qBAAM,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAA;;wBAAhC,SAAgC,CAAC;wBACjC,MAAA,IAAI,CAAC,KAAK,0CAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;;;;wBAE7B,OAAO,CAAC,KAAK,CAAC,iCAA0B,MAAM,CAAC,IAAI,sBAAY,OAAK,CAAC,OAAO,CAAE,CAAC,CAAC;wBAChF,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;wBATV,IAAO,CAAA;;;wBAa5B,uCAAuC;wBACvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;wBAE9B,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;4BAC3C,KAAK,GAAG,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;4BACvD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;wBACzC,CAAC;wBAED,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;4BACnD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;wBACpC,CAAC;;;;wBAED,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,OAAK,CAAC,CAAC;wBACtD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,IAAI,CAAC,WAAW,CAAC,OAAc,EAAE,OAAO,CAAC,CAAC;wBAC5C,CAAC;;;;;;KAEJ;IAED,6BAA6B;IACf,yBAAU,GAAxB,UAAyB,MAAW;;;gBAClC,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;wBACjC,UAAU,CAAC;4BACT,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC;gCACxB,MAAM,CAAC,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;4BACzD,CAAC;iCAAM,CAAC;gCACN,OAAO,EAAE,CAAC;4BACZ,CAAC;wBACH,CAAC,EAAE,IAAI,CAAC,CAAC;oBACX,CAAC,CAAC,EAAC;;;KACJ;IACH,WAAC;AAAD,CAAC,AA7ED,IA6EC;AAED,eAAe,IAAI,CAAC\"}"}
