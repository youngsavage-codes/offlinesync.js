{"code":"// src/conflict.ts\nimport { __assign } from \"tslib\";\nvar LatestActionStrategy = /** @class */ (function () {\n    function LatestActionStrategy() {\n    }\n    LatestActionStrategy.prototype.resolve = function (localAction, remoteAction) {\n        // Resolve conflict by choosing the latest action (based on timestamp)\n        return localAction.timestamp > remoteAction.timestamp ? localAction : remoteAction;\n    };\n    return LatestActionStrategy;\n}());\nvar MergeChangesStrategy = /** @class */ (function () {\n    function MergeChangesStrategy() {\n    }\n    MergeChangesStrategy.prototype.resolve = function (localAction, remoteAction) {\n        // Custom merge logic (this can be customized as per your needs)\n        return __assign(__assign({}, localAction), { data: __assign(__assign({}, localAction.data), remoteAction.data) });\n    };\n    return MergeChangesStrategy;\n}());\nexport { LatestActionStrategy, MergeChangesStrategy };\n//# sourceMappingURL=conflict.js.map","references":[],"map":"{\"version\":3,\"file\":\"conflict.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/conflict.ts\"],\"names\":[],\"mappings\":\"AAAA,kBAAkB;;AAMlB;IAAA;IAKA,CAAC;IAJC,sCAAO,GAAP,UAAQ,WAAgB,EAAE,YAAiB;QACzC,sEAAsE;QACtE,OAAO,WAAW,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC;IACrF,CAAC;IACH,2BAAC;AAAD,CAAC,AALD,IAKC;AAED;IAAA;IAQA,CAAC;IAPC,sCAAO,GAAP,UAAQ,WAAgB,EAAE,YAAiB;QACzC,gEAAgE;QAChE,6BACK,WAAW,KACd,IAAI,wBAAO,WAAW,CAAC,IAAI,GAAK,YAAY,CAAC,IAAI,KACjD;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AARD,IAQC;AAED,OAAO,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,CAAC\"}"}
