{"code":"import { __spreadArray } from \"tslib\";\nimport { v4 as uuidv4 } from 'uuid';\nvar Queue = /** @class */ (function () {\n    function Queue(config) {\n        if (config === void 0) { config = { maxQueueSize: 100 }; }\n        this.queue = [];\n        this.maxQueueSize = config.maxQueueSize;\n    }\n    // Add an action to the queue\n    Queue.prototype.add = function (action) {\n        if (!action.id) {\n            action.id = \"\".concat(action.type, \"-\").concat(Date.now(), \"-\").concat(uuidv4()); // Generate unique ID\n        }\n        // Check for duplicate actions\n        var exists = this.queue.some(function (existingAction) {\n            return existingAction.id === action.id ||\n                (existingAction.type === action.type && JSON.stringify(existingAction.data) === JSON.stringify(action.data));\n        });\n        if (exists) {\n            console.warn(\"Duplicate action detected: \".concat(action.id));\n            return;\n        }\n        // Maintain max queue size\n        if (this.queue.length >= this.maxQueueSize) {\n            this.queue.shift();\n        }\n        this.queue.push(action);\n    };\n    // Get all queued actions\n    Queue.prototype.get = function () {\n        return __spreadArray([], this.queue, true); // Return a copy to avoid mutation\n    };\n    // Replace the queue with new actions\n    Queue.prototype.set = function (actions) {\n        if (actions.length > this.maxQueueSize) {\n            actions = actions.slice(0, this.maxQueueSize); // Truncate if necessary\n        }\n        this.queue = actions;\n    };\n    // Remove action by ID\n    Queue.prototype.remove = function (actionId) {\n        this.queue = this.queue.filter(function (action) { return action.id !== actionId; });\n    };\n    // Clear all actions\n    Queue.prototype.clear = function () {\n        this.queue = [];\n    };\n    // Check if the queue is empty\n    Queue.prototype.isEmpty = function () {\n        return this.queue.length === 0;\n    };\n    // Get the size of the queue\n    Queue.prototype.size = function () {\n        return this.queue.length;\n    };\n    return Queue;\n}());\nexport default Queue;\n//# sourceMappingURL=queue.js.map","references":["C:/Users/User/Documents/GitHub/offlinesync.js/node_modules/uuid/dist/cjs/index.d.ts"],"map":"{\"version\":3,\"file\":\"queue.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/queue.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AASpC;IAIE,eAAY,MAAwD;QAAxD,uBAAA,EAAA,WAAqC,YAAY,EAAE,GAAG,EAAE;QAH5D,UAAK,GAAa,EAAE,CAAC;QAI3B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,CAAC;IAED,6BAA6B;IAC7B,mBAAG,GAAH,UAAI,MAAc;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YACf,MAAM,CAAC,EAAE,GAAG,UAAG,MAAM,CAAC,IAAI,cAAI,IAAI,CAAC,GAAG,EAAE,cAAI,MAAM,EAAE,CAAE,CAAC,CAAC,qBAAqB;QAC/E,CAAC;QAED,8BAA8B;QAC9B,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,cAAc;YAC3C,OAAA,cAAc,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;gBAC/B,CAAC,cAAc,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAD5G,CAC4G,CAC7G,CAAC;QAEF,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,qCAA8B,MAAM,CAAC,EAAE,CAAE,CAAC,CAAC;YACxD,OAAO;QACT,CAAC;QAED,0BAA0B;QAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,yBAAyB;IACzB,mBAAG,GAAH;QACE,yBAAW,IAAI,CAAC,KAAK,QAAE,CAAC,kCAAkC;IAC5D,CAAC;IAED,qCAAqC;IACrC,mBAAG,GAAH,UAAI,OAAiB;QACnB,IAAI,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACvC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,wBAAwB;QACzE,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,CAAC;IAED,sBAAsB;IACtB,sBAAM,GAAN,UAAO,QAAgB;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAtB,CAAsB,CAAC,CAAC;IACnE,CAAC;IAED,oBAAoB;IACpB,qBAAK,GAAL;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,8BAA8B;IAC9B,uBAAO,GAAP;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,4BAA4B;IAC5B,oBAAI,GAAJ;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;IACH,YAAC;AAAD,CAAC,AAjED,IAiEC;AAED,eAAe,KAAK,CAAC\"}","dts":{"name":"C:/Users/User/Documents/GitHub/offlinesync.js/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/queue.d.ts","writeByteOrderMark":false,"text":"interface Action {\n    type: string;\n    data: any;\n    timestamp: number;\n    id: string;\n}\ndeclare class Queue {\n    private queue;\n    private maxQueueSize;\n    constructor(config?: {\n        maxQueueSize: number;\n    });\n    add(action: Action): void;\n    get(): Action[];\n    set(actions: Action[]): void;\n    remove(actionId: string): void;\n    clear(): void;\n    isEmpty(): boolean;\n    size(): number;\n}\nexport default Queue;\n"}}
